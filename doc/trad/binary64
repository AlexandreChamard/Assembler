
a.out:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x11b>
  400248:	78 38                	js     400282 <_init-0x10e>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 02                	add    BYTE PTR [rdx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 06                	add    BYTE PTR [rsi],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 20                	add    BYTE PTR [rax],ah
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 47 9b             	add    BYTE PTR [rdi-0x65],al
  400286:	3b 8d 29 a2 3f 40    	cmp    ecx,DWORD PTR [rbp+0x403fa229]
  40028c:	1a f9                	sbb    bh,cl
  40028e:	9e                   	sahf   
  40028f:	17                   	(bad)  
  400290:	9e                   	sahf   
  400291:	04 0f                	add    al,0xf
  400293:	58                   	pop    rax
  400294:	53                   	push   rbx
  400295:	b4 9e                	mov    ah,0x9e
  400297:	2d                   	.byte 0x2d

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    DWORD PTR [rax],eax
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	01 00                	add    DWORD PTR [rax],eax
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     eax,DWORD PTR [rax]
  4002d2:	00 00                	add    BYTE PTR [rax],al
  4002d4:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002e6:	00 00                	add    BYTE PTR [rax],al
  4002e8:	1d 00 00 00 20       	sbb    eax,0x20000000
	...

Disassembly of section .dynstr:

0000000000400300 <.dynstr>:
  400300:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  400304:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  400306:	73 6f                	jae    400377 <_init-0x19>
  400308:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
  40030d:	6c                   	ins    BYTE PTR es:[rdi],dx
  40030e:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  400315:	72 74                	jb     40038b <_init-0x5>
  400317:	5f                   	pop    rdi
  400318:	6d                   	ins    DWORD PTR es:[rdi],dx
  400319:	61                   	(bad)  
  40031a:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [rsi+0x0],0x6d675f5f
  400321:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400322:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400323:	5f                   	pop    rdi
  400324:	73 74                	jae    40039a <_init+0xa>
  400326:	61                   	(bad)  
  400327:	72 74                	jb     40039d <_init+0xd>
  400329:	5f                   	pop    rdi
  40032a:	5f                   	pop    rdi
  40032b:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  40032e:	49                   	rex.WB
  40032f:	42                   	rex.X
  400330:	43 5f                	rex.XB pop r15
  400332:	32 2e                	xor    ch,BYTE PTR [rsi]
  400334:	32 2e                	xor    ch,BYTE PTR [rsi]
  400336:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400338 <.gnu.version>:
  400338:	00 00                	add    BYTE PTR [rax],al
  40033a:	02 00                	add    al,BYTE PTR [rax]
	...

Disassembly of section .gnu.version_r:

0000000000400340 <.gnu.version_r>:
  400340:	01 00                	add    DWORD PTR [rax],eax
  400342:	01 00                	add    DWORD PTR [rax],eax
  400344:	01 00                	add    DWORD PTR [rax],eax
  400346:	00 00                	add    BYTE PTR [rax],al
  400348:	10 00                	adc    BYTE PTR [rax],al
  40034a:	00 00                	add    BYTE PTR [rax],al
  40034c:	00 00                	add    BYTE PTR [rax],al
  40034e:	00 00                	add    BYTE PTR [rax],al
  400350:	75 1a                	jne    40036c <_init-0x24>
  400352:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  400358:	2c 00                	sub    al,0x0
  40035a:	00 00                	add    BYTE PTR [rax],al
  40035c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000400360 <.rela.dyn>:
  400360:	f8                   	clc    
  400361:	0f 60 00             	punpcklbw mm0,DWORD PTR [rax]
  400364:	00 00                	add    BYTE PTR [rax],al
  400366:	00 00                	add    BYTE PTR [rax],al
  400368:	06                   	(bad)  
  400369:	00 00                	add    BYTE PTR [rax],al
  40036b:	00 02                	add    BYTE PTR [rdx],al
	...

Disassembly of section .rela.plt:

0000000000400378 <.rela.plt>:
  400378:	18 10                	sbb    BYTE PTR [rax],dl
  40037a:	60                   	(bad)  
  40037b:	00 00                	add    BYTE PTR [rax],al
  40037d:	00 00                	add    BYTE PTR [rax],al
  40037f:	00 07                	add    BYTE PTR [rdi],al
  400381:	00 00                	add    BYTE PTR [rax],al
  400383:	00 01                	add    BYTE PTR [rcx],al
	...

Disassembly of section .init:

0000000000400390 <_init>:
  400390:	48 83 ec 08          	sub    rsp,0x8
  400394:	48 8b 05 5d 0c 20 00 	mov    rax,QWORD PTR [rip+0x200c5d]        # 600ff8 <_DYNAMIC+0x1d0>
  40039b:	48 85 c0             	test   rax,rax
  40039e:	74 05                	je     4003a5 <_init+0x15>
  4003a0:	e8 2b 00 00 00       	call   4003d0 <__libc_start_main@plt+0x10>
  4003a5:	48 83 c4 08          	add    rsp,0x8
  4003a9:	c3                   	ret    

Disassembly of section .plt:

00000000004003b0 <__libc_start_main@plt-0x10>:
  4003b0:	ff 35 52 0c 20 00    	push   QWORD PTR [rip+0x200c52]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003b6:	ff 25 54 0c 20 00    	jmp    QWORD PTR [rip+0x200c54]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004003c0 <__libc_start_main@plt>:
  4003c0:	ff 25 52 0c 20 00    	jmp    QWORD PTR [rip+0x200c52]        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4003c6:	68 00 00 00 00       	push   0x0
  4003cb:	e9 e0 ff ff ff       	jmp    4003b0 <_init+0x20>

Disassembly of section .plt.got:

00000000004003d0 <.plt.got>:
  4003d0:	ff 25 22 0c 20 00    	jmp    QWORD PTR [rip+0x200c22]        # 600ff8 <_DYNAMIC+0x1d0>
  4003d6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000004003e0 <_start>:
  4003e0:	31 ed                	xor    ebp,ebp
  4003e2:	49 89 d1             	mov    r9,rdx
  4003e5:	5e                   	pop    rsi
  4003e6:	48 89 e2             	mov    rdx,rsp
  4003e9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  4003ed:	50                   	push   rax
  4003ee:	54                   	push   rsp
  4003ef:	49 c7 c0 60 05 40 00 	mov    r8,0x400560
  4003f6:	48 c7 c1 f0 04 40 00 	mov    rcx,0x4004f0
  4003fd:	48 c7 c7 d6 04 40 00 	mov    rdi,0x4004d6
  400404:	e8 b7 ff ff ff       	call   4003c0 <__libc_start_main@plt>
  400409:	f4                   	hlt    
  40040a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400410 <deregister_tm_clones>:
  400410:	b8 37 10 60 00       	mov    eax,0x601037
  400415:	55                   	push   rbp
  400416:	48 2d 30 10 60 00    	sub    rax,0x601030
  40041c:	48 83 f8 0e          	cmp    rax,0xe
  400420:	48 89 e5             	mov    rbp,rsp
  400423:	76 1b                	jbe    400440 <deregister_tm_clones+0x30>
  400425:	b8 00 00 00 00       	mov    eax,0x0
  40042a:	48 85 c0             	test   rax,rax
  40042d:	74 11                	je     400440 <deregister_tm_clones+0x30>
  40042f:	5d                   	pop    rbp
  400430:	bf 30 10 60 00       	mov    edi,0x601030
  400435:	ff e0                	jmp    rax
  400437:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  40043e:	00 00 
  400440:	5d                   	pop    rbp
  400441:	c3                   	ret    
  400442:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  400446:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40044d:	00 00 00 

0000000000400450 <register_tm_clones>:
  400450:	be 30 10 60 00       	mov    esi,0x601030
  400455:	55                   	push   rbp
  400456:	48 81 ee 30 10 60 00 	sub    rsi,0x601030
  40045d:	48 c1 fe 03          	sar    rsi,0x3
  400461:	48 89 e5             	mov    rbp,rsp
  400464:	48 89 f0             	mov    rax,rsi
  400467:	48 c1 e8 3f          	shr    rax,0x3f
  40046b:	48 01 c6             	add    rsi,rax
  40046e:	48 d1 fe             	sar    rsi,1
  400471:	74 15                	je     400488 <register_tm_clones+0x38>
  400473:	b8 00 00 00 00       	mov    eax,0x0
  400478:	48 85 c0             	test   rax,rax
  40047b:	74 0b                	je     400488 <register_tm_clones+0x38>
  40047d:	5d                   	pop    rbp
  40047e:	bf 30 10 60 00       	mov    edi,0x601030
  400483:	ff e0                	jmp    rax
  400485:	0f 1f 00             	nop    DWORD PTR [rax]
  400488:	5d                   	pop    rbp
  400489:	c3                   	ret    
  40048a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400490 <__do_global_dtors_aux>:
  400490:	80 3d 99 0b 20 00 00 	cmp    BYTE PTR [rip+0x200b99],0x0        # 601030 <__TMC_END__>
  400497:	75 11                	jne    4004aa <__do_global_dtors_aux+0x1a>
  400499:	55                   	push   rbp
  40049a:	48 89 e5             	mov    rbp,rsp
  40049d:	e8 6e ff ff ff       	call   400410 <deregister_tm_clones>
  4004a2:	5d                   	pop    rbp
  4004a3:	c6 05 86 0b 20 00 01 	mov    BYTE PTR [rip+0x200b86],0x1        # 601030 <__TMC_END__>
  4004aa:	f3 c3                	repz ret 
  4004ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004004b0 <frame_dummy>:
  4004b0:	bf 20 0e 60 00       	mov    edi,0x600e20
  4004b5:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
  4004b9:	75 05                	jne    4004c0 <frame_dummy+0x10>
  4004bb:	eb 93                	jmp    400450 <register_tm_clones>
  4004bd:	0f 1f 00             	nop    DWORD PTR [rax]
  4004c0:	b8 00 00 00 00       	mov    eax,0x0
  4004c5:	48 85 c0             	test   rax,rax
  4004c8:	74 f1                	je     4004bb <frame_dummy+0xb>
  4004ca:	55                   	push   rbp
  4004cb:	48 89 e5             	mov    rbp,rsp
  4004ce:	ff d0                	call   rax
  4004d0:	5d                   	pop    rbp
  4004d1:	e9 7a ff ff ff       	jmp    400450 <register_tm_clones>

00000000004004d6 <main>:
  4004d6:	55                   	push   rbp
  4004d7:	48 89 e5             	mov    rbp,rsp
  4004da:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
  4004dd:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  4004e1:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  4004e4:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  4004e7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4004ea:	5d                   	pop    rbp
  4004eb:	c3                   	ret    
  4004ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004004f0 <__libc_csu_init>:
  4004f0:	41 57                	push   r15
  4004f2:	41 56                	push   r14
  4004f4:	41 89 ff             	mov    r15d,edi
  4004f7:	41 55                	push   r13
  4004f9:	41 54                	push   r12
  4004fb:	4c 8d 25 0e 09 20 00 	lea    r12,[rip+0x20090e]        # 600e10 <__frame_dummy_init_array_entry>
  400502:	55                   	push   rbp
  400503:	48 8d 2d 0e 09 20 00 	lea    rbp,[rip+0x20090e]        # 600e18 <__init_array_end>
  40050a:	53                   	push   rbx
  40050b:	49 89 f6             	mov    r14,rsi
  40050e:	49 89 d5             	mov    r13,rdx
  400511:	4c 29 e5             	sub    rbp,r12
  400514:	48 83 ec 08          	sub    rsp,0x8
  400518:	48 c1 fd 03          	sar    rbp,0x3
  40051c:	e8 6f fe ff ff       	call   400390 <_init>
  400521:	48 85 ed             	test   rbp,rbp
  400524:	74 20                	je     400546 <__libc_csu_init+0x56>
  400526:	31 db                	xor    ebx,ebx
  400528:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40052f:	00 
  400530:	4c 89 ea             	mov    rdx,r13
  400533:	4c 89 f6             	mov    rsi,r14
  400536:	44 89 ff             	mov    edi,r15d
  400539:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40053d:	48 83 c3 01          	add    rbx,0x1
  400541:	48 39 eb             	cmp    rbx,rbp
  400544:	75 ea                	jne    400530 <__libc_csu_init+0x40>
  400546:	48 83 c4 08          	add    rsp,0x8
  40054a:	5b                   	pop    rbx
  40054b:	5d                   	pop    rbp
  40054c:	41 5c                	pop    r12
  40054e:	41 5d                	pop    r13
  400550:	41 5e                	pop    r14
  400552:	41 5f                	pop    r15
  400554:	c3                   	ret    
  400555:	90                   	nop
  400556:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40055d:	00 00 00 

0000000000400560 <__libc_csu_fini>:
  400560:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000400564 <_fini>:
  400564:	48 83 ec 08          	sub    rsp,0x8
  400568:	48 83 c4 08          	add    rsp,0x8
  40056c:	c3                   	ret    

Disassembly of section .rodata:

0000000000400570 <_IO_stdin_used>:
  400570:	01 00                	add    DWORD PTR [rax],eax
  400572:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .eh_frame_hdr:

0000000000400574 <__GNU_EH_FRAME_HDR>:
  400574:	01 1b                	add    DWORD PTR [rbx],ebx
  400576:	03 3b                	add    edi,DWORD PTR [rbx]
  400578:	30 00                	xor    BYTE PTR [rax],al
  40057a:	00 00                	add    BYTE PTR [rax],al
  40057c:	05 00 00 00 3c       	add    eax,0x3c000000
  400581:	fe                   	(bad)  
  400582:	ff                   	(bad)  
  400583:	ff                   	(bad)  
  400584:	7c 00                	jl     400586 <__GNU_EH_FRAME_HDR+0x12>
  400586:	00 00                	add    BYTE PTR [rax],al
  400588:	6c                   	ins    BYTE PTR es:[rdi],dx
  400589:	fe                   	(bad)  
  40058a:	ff                   	(bad)  
  40058b:	ff 4c 00 00          	dec    DWORD PTR [rax+rax*1+0x0]
  40058f:	00 62 ff             	add    BYTE PTR [rdx-0x1],ah
  400592:	ff                   	(bad)  
  400593:	ff a4 00 00 00 7c ff 	jmp    QWORD PTR [rax+rax*1-0x840000]
  40059a:	ff                   	(bad)  
  40059b:	ff c4                	inc    esp
  40059d:	00 00                	add    BYTE PTR [rax],al
  40059f:	00 ec                	add    ah,ch
  4005a1:	ff                   	(bad)  
  4005a2:	ff                   	(bad)  
  4005a3:	ff 0c 01             	dec    DWORD PTR [rcx+rax*1]
	...

Disassembly of section .eh_frame:

00000000004005a8 <__FRAME_END__-0xf0>:
  4005a8:	14 00                	adc    al,0x0
  4005aa:	00 00                	add    BYTE PTR [rax],al
  4005ac:	00 00                	add    BYTE PTR [rax],al
  4005ae:	00 00                	add    BYTE PTR [rax],al
  4005b0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4005b3:	00 01                	add    BYTE PTR [rcx],al
  4005b5:	78 10                	js     4005c7 <__GNU_EH_FRAME_HDR+0x53>
  4005b7:	01 1b                	add    DWORD PTR [rbx],ebx
  4005b9:	0c 07                	or     al,0x7
  4005bb:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  4005c1:	00 00                	add    BYTE PTR [rax],al
  4005c3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4005c6:	00 00                	add    BYTE PTR [rax],al
  4005c8:	18 fe                	sbb    dh,bh
  4005ca:	ff                   	(bad)  
  4005cb:	ff 2a                	jmp    FWORD PTR [rdx]
	...
  4005d5:	00 00                	add    BYTE PTR [rax],al
  4005d7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  4005da:	00 00                	add    BYTE PTR [rax],al
  4005dc:	00 00                	add    BYTE PTR [rax],al
  4005de:	00 00                	add    BYTE PTR [rax],al
  4005e0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4005e3:	00 01                	add    BYTE PTR [rcx],al
  4005e5:	78 10                	js     4005f7 <__GNU_EH_FRAME_HDR+0x83>
  4005e7:	01 1b                	add    DWORD PTR [rbx],ebx
  4005e9:	0c 07                	or     al,0x7
  4005eb:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  4005f1:	00 00                	add    BYTE PTR [rax],al
  4005f3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4005f6:	00 00                	add    BYTE PTR [rax],al
  4005f8:	b8 fd ff ff 20       	mov    eax,0x20fffffd
  4005fd:	00 00                	add    BYTE PTR [rax],al
  4005ff:	00 00                	add    BYTE PTR [rax],al
  400601:	0e                   	(bad)  
  400602:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  400605:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  400608:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  40060b:	80 00 3f             	add    BYTE PTR [rax],0x3f
  40060e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  400610:	2a 33                	sub    dh,BYTE PTR [rbx]
  400612:	24 22                	and    al,0x22
  400614:	00 00                	add    BYTE PTR [rax],al
  400616:	00 00                	add    BYTE PTR [rax],al
  400618:	1c 00                	sbb    al,0x0
  40061a:	00 00                	add    BYTE PTR [rax],al
  40061c:	44 00 00             	add    BYTE PTR [rax],r8b
  40061f:	00 b6 fe ff ff 16    	add    BYTE PTR [rsi+0x16fffffe],dh
  400625:	00 00                	add    BYTE PTR [rax],al
  400627:	00 00                	add    BYTE PTR [rax],al
  400629:	41 0e                	rex.B (bad) 
  40062b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400631:	51                   	push   rcx
  400632:	0c 07                	or     al,0x7
  400634:	08 00                	or     BYTE PTR [rax],al
  400636:	00 00                	add    BYTE PTR [rax],al
  400638:	44 00 00             	add    BYTE PTR [rax],r8b
  40063b:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
  40063f:	00 b0 fe ff ff 65    	add    BYTE PTR [rax+0x65fffffe],dh
  400645:	00 00                	add    BYTE PTR [rax],al
  400647:	00 00                	add    BYTE PTR [rax],al
  400649:	42 0e                	rex.X (bad) 
  40064b:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
  400651:	8e 03                	mov    es,WORD PTR [rbx]
  400653:	45 0e                	rex.RB (bad) 
  400655:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
  40065b:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff867014a9 <_end+0xffffffff86100471>
  400661:	06                   	(bad)  
  400662:	48 0e                	rex.W (bad) 
  400664:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  40066a:	72 0e                	jb     40067a <__GNU_EH_FRAME_HDR+0x106>
  40066c:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  40066f:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  400672:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  400675:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  400678:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  40067b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  40067e:	08 00                	or     BYTE PTR [rax],al
  400680:	14 00                	adc    al,0x0
  400682:	00 00                	add    BYTE PTR [rax],al
  400684:	ac                   	lods   al,BYTE PTR ds:[rsi]
  400685:	00 00                	add    BYTE PTR [rax],al
  400687:	00 d8                	add    al,bl
  400689:	fe                   	(bad)  
  40068a:	ff                   	(bad)  
  40068b:	ff 02                	inc    DWORD PTR [rdx]
	...

0000000000400698 <__FRAME_END__>:
  400698:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	b0 04                	mov    al,0x4
  600e12:	40 00 00             	add    BYTE PTR [rax],al
  600e15:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	90                   	nop
  600e19:	04 40                	add    al,0x40
  600e1b:	00 00                	add    BYTE PTR [rax],al
  600e1d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    DWORD PTR [rax],eax
  600e2a:	00 00                	add    BYTE PTR [rax],al
  600e2c:	00 00                	add    BYTE PTR [rax],al
  600e2e:	00 00                	add    BYTE PTR [rax],al
  600e30:	01 00                	add    DWORD PTR [rax],eax
  600e32:	00 00                	add    BYTE PTR [rax],al
  600e34:	00 00                	add    BYTE PTR [rax],al
  600e36:	00 00                	add    BYTE PTR [rax],al
  600e38:	0c 00                	or     al,0x0
  600e3a:	00 00                	add    BYTE PTR [rax],al
  600e3c:	00 00                	add    BYTE PTR [rax],al
  600e3e:	00 00                	add    BYTE PTR [rax],al
  600e40:	90                   	nop
  600e41:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  600e44:	00 00                	add    BYTE PTR [rax],al
  600e46:	00 00                	add    BYTE PTR [rax],al
  600e48:	0d 00 00 00 00       	or     eax,0x0
  600e4d:	00 00                	add    BYTE PTR [rax],al
  600e4f:	00 64 05 40          	add    BYTE PTR [rbp+rax*1+0x40],ah
  600e53:	00 00                	add    BYTE PTR [rax],al
  600e55:	00 00                	add    BYTE PTR [rax],al
  600e57:	00 19                	add    BYTE PTR [rcx],bl
  600e59:	00 00                	add    BYTE PTR [rax],al
  600e5b:	00 00                	add    BYTE PTR [rax],al
  600e5d:	00 00                	add    BYTE PTR [rax],al
  600e5f:	00 10                	add    BYTE PTR [rax],dl
  600e61:	0e                   	(bad)  
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    BYTE PTR [rax],al
  600e65:	00 00                	add    BYTE PTR [rax],al
  600e67:	00 1b                	add    BYTE PTR [rbx],bl
  600e69:	00 00                	add    BYTE PTR [rax],al
  600e6b:	00 00                	add    BYTE PTR [rax],al
  600e6d:	00 00                	add    BYTE PTR [rax],al
  600e6f:	00 08                	add    BYTE PTR [rax],cl
  600e71:	00 00                	add    BYTE PTR [rax],al
  600e73:	00 00                	add    BYTE PTR [rax],al
  600e75:	00 00                	add    BYTE PTR [rax],al
  600e77:	00 1a                	add    BYTE PTR [rdx],bl
  600e79:	00 00                	add    BYTE PTR [rax],al
  600e7b:	00 00                	add    BYTE PTR [rax],al
  600e7d:	00 00                	add    BYTE PTR [rax],al
  600e7f:	00 18                	add    BYTE PTR [rax],bl
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    BYTE PTR [rax],al
  600e85:	00 00                	add    BYTE PTR [rax],al
  600e87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  600e8a:	00 00                	add    BYTE PTR [rax],al
  600e8c:	00 00                	add    BYTE PTR [rax],al
  600e8e:	00 00                	add    BYTE PTR [rax],al
  600e90:	08 00                	or     BYTE PTR [rax],al
  600e92:	00 00                	add    BYTE PTR [rax],al
  600e94:	00 00                	add    BYTE PTR [rax],al
  600e96:	00 00                	add    BYTE PTR [rax],al
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600e9d:	00 00                	add    BYTE PTR [rax],al
  600e9f:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  600ea5:	00 00                	add    BYTE PTR [rax],al
  600ea7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    BYTE PTR [rax],al
  600eaf:	00 00                	add    BYTE PTR [rax],al
  600eb1:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  600eb4:	00 00                	add    BYTE PTR [rax],al
  600eb6:	00 00                	add    BYTE PTR [rax],al
  600eb8:	06                   	(bad)  
  600eb9:	00 00                	add    BYTE PTR [rax],al
  600ebb:	00 00                	add    BYTE PTR [rax],al
  600ebd:	00 00                	add    BYTE PTR [rax],al
  600ebf:	00 b8 02 40 00 00    	add    BYTE PTR [rax+0x4002],bh
  600ec5:	00 00                	add    BYTE PTR [rax],al
  600ec7:	00 0a                	add    BYTE PTR [rdx],cl
  600ec9:	00 00                	add    BYTE PTR [rax],al
  600ecb:	00 00                	add    BYTE PTR [rax],al
  600ecd:	00 00                	add    BYTE PTR [rax],al
  600ecf:	00 38                	add    BYTE PTR [rax],bh
  600ed1:	00 00                	add    BYTE PTR [rax],al
  600ed3:	00 00                	add    BYTE PTR [rax],al
  600ed5:	00 00                	add    BYTE PTR [rax],al
  600ed7:	00 0b                	add    BYTE PTR [rbx],cl
  600ed9:	00 00                	add    BYTE PTR [rax],al
  600edb:	00 00                	add    BYTE PTR [rax],al
  600edd:	00 00                	add    BYTE PTR [rax],al
  600edf:	00 18                	add    BYTE PTR [rax],bl
  600ee1:	00 00                	add    BYTE PTR [rax],al
  600ee3:	00 00                	add    BYTE PTR [rax],al
  600ee5:	00 00                	add    BYTE PTR [rax],al
  600ee7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 600eed <_DYNAMIC+0xc5>
	...
  600ef5:	00 00                	add    BYTE PTR [rax],al
  600ef7:	00 03                	add    BYTE PTR [rbx],al
	...
  600f01:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  600f04:	00 00                	add    BYTE PTR [rax],al
  600f06:	00 00                	add    BYTE PTR [rax],al
  600f08:	02 00                	add    al,BYTE PTR [rax]
  600f0a:	00 00                	add    BYTE PTR [rax],al
  600f0c:	00 00                	add    BYTE PTR [rax],al
  600f0e:	00 00                	add    BYTE PTR [rax],al
  600f10:	18 00                	sbb    BYTE PTR [rax],al
  600f12:	00 00                	add    BYTE PTR [rax],al
  600f14:	00 00                	add    BYTE PTR [rax],al
  600f16:	00 00                	add    BYTE PTR [rax],al
  600f18:	14 00                	adc    al,0x0
  600f1a:	00 00                	add    BYTE PTR [rax],al
  600f1c:	00 00                	add    BYTE PTR [rax],al
  600f1e:	00 00                	add    BYTE PTR [rax],al
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    BYTE PTR [rax],al
  600f23:	00 00                	add    BYTE PTR [rax],al
  600f25:	00 00                	add    BYTE PTR [rax],al
  600f27:	00 17                	add    BYTE PTR [rdi],dl
  600f29:	00 00                	add    BYTE PTR [rax],al
  600f2b:	00 00                	add    BYTE PTR [rax],al
  600f2d:	00 00                	add    BYTE PTR [rax],al
  600f2f:	00 78 03             	add    BYTE PTR [rax+0x3],bh
  600f32:	40 00 00             	add    BYTE PTR [rax],al
  600f35:	00 00                	add    BYTE PTR [rax],al
  600f37:	00 07                	add    BYTE PTR [rdi],al
  600f39:	00 00                	add    BYTE PTR [rax],al
  600f3b:	00 00                	add    BYTE PTR [rax],al
  600f3d:	00 00                	add    BYTE PTR [rax],al
  600f3f:	00 60 03             	add    BYTE PTR [rax+0x3],ah
  600f42:	40 00 00             	add    BYTE PTR [rax],al
  600f45:	00 00                	add    BYTE PTR [rax],al
  600f47:	00 08                	add    BYTE PTR [rax],cl
  600f49:	00 00                	add    BYTE PTR [rax],al
  600f4b:	00 00                	add    BYTE PTR [rax],al
  600f4d:	00 00                	add    BYTE PTR [rax],al
  600f4f:	00 18                	add    BYTE PTR [rax],bl
  600f51:	00 00                	add    BYTE PTR [rax],al
  600f53:	00 00                	add    BYTE PTR [rax],al
  600f55:	00 00                	add    BYTE PTR [rax],al
  600f57:	00 09                	add    BYTE PTR [rcx],cl
  600f59:	00 00                	add    BYTE PTR [rax],al
  600f5b:	00 00                	add    BYTE PTR [rax],al
  600f5d:	00 00                	add    BYTE PTR [rax],al
  600f5f:	00 18                	add    BYTE PTR [rax],bl
  600f61:	00 00                	add    BYTE PTR [rax],al
  600f63:	00 00                	add    BYTE PTR [rax],al
  600f65:	00 00                	add    BYTE PTR [rax],al
  600f67:	00 fe                	add    dh,bh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f6d:	00 00                	add    BYTE PTR [rax],al
  600f6f:	00 40 03             	add    BYTE PTR [rax+0x3],al
  600f72:	40 00 00             	add    BYTE PTR [rax],al
  600f75:	00 00                	add    BYTE PTR [rax],al
  600f77:	00 ff                	add    bh,bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f7d:	00 00                	add    BYTE PTR [rax],al
  600f7f:	00 01                	add    BYTE PTR [rcx],al
  600f81:	00 00                	add    BYTE PTR [rax],al
  600f83:	00 00                	add    BYTE PTR [rax],al
  600f85:	00 00                	add    BYTE PTR [rax],al
  600f87:	00 f0                	add    al,dh
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f8d:	00 00                	add    BYTE PTR [rax],al
  600f8f:	00 38                	add    BYTE PTR [rax],bh
  600f91:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    BYTE PTR [rsi],cl
  601002:	60                   	(bad)  
	...
  601017:	00 c6                	add    dh,al
  601019:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  60101c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000601020 <__data_start>:
	...

0000000000601028 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601030 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x400318>
   a:	74 75                	je     81 <_init-0x40030f>
   c:	20 35 2e 34 2e 30    	and    BYTE PTR [rip+0x302e342e],dh        # 302e3440 <_end+0x2fce2408>
  12:	2d 36 75 62 75       	sub    eax,0x75627536
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <_init-0x400301>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	36 2e 30 34 2e       	ss xor BYTE PTR cs:[rsi+rbp*1],dh
  22:	35 29 20 35 2e       	xor    eax,0x2e352029
  27:	34 2e                	xor    al,0x2e
  29:	30 20                	xor    BYTE PTR [rax],ah
  2b:	32 30                	xor    dh,BYTE PTR [rax]
  2d:	31 36                	xor    DWORD PTR [rsi],esi
  2f:	30 36                	xor    BYTE PTR [rsi],dh
  31:	30 39                	xor    BYTE PTR [rcx],bh
	...
