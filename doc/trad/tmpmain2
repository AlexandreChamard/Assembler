
a.out:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x18b>
  400248:	78 38                	js     400282 <_init-0x17e>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 02                	add    BYTE PTR [rdx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 06                	add    BYTE PTR [rsi],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 20                	add    BYTE PTR [rax],ah
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 e2                	add    dl,ah
  400285:	4a 8e 3c 11          	rex.WX mov ?,WORD PTR [rcx+r10*1]
  400289:	eb 6f                	jmp    4002fa <_init-0x106>
  40028b:	2b 4b 0a             	sub    ecx,DWORD PTR [rbx+0xa]
  40028e:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40028f:	e4 5f                	in     al,0x5f
  400291:	d2 39                	sar    BYTE PTR [rcx],cl
  400293:	e5 fe                	in     eax,0xfe
  400295:	33 6a 08             	xor    ebp,DWORD PTR [rdx+0x8]

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    DWORD PTR [rax],eax
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	01 00                	add    DWORD PTR [rax],eax
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     eax,DWORD PTR [rax]
  4002d2:	00 00                	add    BYTE PTR [rax],al
  4002d4:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002e6:	00 00                	add    BYTE PTR [rax],al
  4002e8:	17                   	(bad)  
  4002e9:	00 00                	add    BYTE PTR [rax],al
  4002eb:	00 12                	add    BYTE PTR [rdx],dl
	...
  4002fd:	00 00                	add    BYTE PTR [rax],al
  4002ff:	00 29                	add    BYTE PTR [rcx],ch
  400301:	00 00                	add    BYTE PTR [rax],al
  400303:	00 20                	add    BYTE PTR [rax],ah
	...
  400315:	00 00                	add    BYTE PTR [rax],al
  400317:	00 12                	add    BYTE PTR [rdx],dl
  400319:	00 00                	add    BYTE PTR [rax],al
  40031b:	00 12                	add    BYTE PTR [rdx],dl
	...

Disassembly of section .dynstr:

0000000000400330 <.dynstr>:
  400330:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  400334:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  400336:	73 6f                	jae    4003a7 <_init-0x59>
  400338:	2e 36 00 70 72       	cs add BYTE PTR ss:[rax+0x72],dh
  40033d:	69 6e 74 66 00 61 74 	imul   ebp,DWORD PTR [rsi+0x74],0x74610066
  400344:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400345:	69 00 5f 5f 6c 69    	imul   eax,DWORD PTR [rax],0x696c5f5f
  40034b:	62 63 5f 73 74       	(bad)  {k3}
  400350:	61                   	(bad)  
  400351:	72 74                	jb     4003c7 <_init-0x39>
  400353:	5f                   	pop    rdi
  400354:	6d                   	ins    DWORD PTR es:[rdi],dx
  400355:	61                   	(bad)  
  400356:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [rsi+0x0],0x6d675f5f
  40035d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40035e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40035f:	5f                   	pop    rdi
  400360:	73 74                	jae    4003d6 <_init-0x2a>
  400362:	61                   	(bad)  
  400363:	72 74                	jb     4003d9 <_init-0x27>
  400365:	5f                   	pop    rdi
  400366:	5f                   	pop    rdi
  400367:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  40036a:	49                   	rex.WB
  40036b:	42                   	rex.X
  40036c:	43 5f                	rex.XB pop r15
  40036e:	32 2e                	xor    ch,BYTE PTR [rsi]
  400370:	32 2e                	xor    ch,BYTE PTR [rsi]
  400372:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400374 <.gnu.version>:
  400374:	00 00                	add    BYTE PTR [rax],al
  400376:	02 00                	add    al,BYTE PTR [rax]
  400378:	02 00                	add    al,BYTE PTR [rax]
  40037a:	00 00                	add    BYTE PTR [rax],al
  40037c:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

0000000000400380 <.gnu.version_r>:
  400380:	01 00                	add    DWORD PTR [rax],eax
  400382:	01 00                	add    DWORD PTR [rax],eax
  400384:	01 00                	add    DWORD PTR [rax],eax
  400386:	00 00                	add    BYTE PTR [rax],al
  400388:	10 00                	adc    BYTE PTR [rax],al
  40038a:	00 00                	add    BYTE PTR [rax],al
  40038c:	00 00                	add    BYTE PTR [rax],al
  40038e:	00 00                	add    BYTE PTR [rax],al
  400390:	75 1a                	jne    4003ac <_init-0x54>
  400392:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  400398:	38 00                	cmp    BYTE PTR [rax],al
  40039a:	00 00                	add    BYTE PTR [rax],al
  40039c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000004003a0 <.rela.dyn>:
  4003a0:	f8                   	clc    
  4003a1:	0f 60 00             	punpcklbw mm0,DWORD PTR [rax]
  4003a4:	00 00                	add    BYTE PTR [rax],al
  4003a6:	00 00                	add    BYTE PTR [rax],al
  4003a8:	06                   	(bad)  
  4003a9:	00 00                	add    BYTE PTR [rax],al
  4003ab:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .rela.plt:

00000000004003b8 <.rela.plt>:
  4003b8:	18 10                	sbb    BYTE PTR [rax],dl
  4003ba:	60                   	(bad)  
  4003bb:	00 00                	add    BYTE PTR [rax],al
  4003bd:	00 00                	add    BYTE PTR [rax],al
  4003bf:	00 07                	add    BYTE PTR [rdi],al
  4003c1:	00 00                	add    BYTE PTR [rax],al
  4003c3:	00 01                	add    BYTE PTR [rcx],al
	...
  4003cd:	00 00                	add    BYTE PTR [rax],al
  4003cf:	00 20                	add    BYTE PTR [rax],ah
  4003d1:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  4003d4:	00 00                	add    BYTE PTR [rax],al
  4003d6:	00 00                	add    BYTE PTR [rax],al
  4003d8:	07                   	(bad)  
  4003d9:	00 00                	add    BYTE PTR [rax],al
  4003db:	00 02                	add    BYTE PTR [rdx],al
	...
  4003e5:	00 00                	add    BYTE PTR [rax],al
  4003e7:	00 28                	add    BYTE PTR [rax],ch
  4003e9:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  4003ec:	00 00                	add    BYTE PTR [rax],al
  4003ee:	00 00                	add    BYTE PTR [rax],al
  4003f0:	07                   	(bad)  
  4003f1:	00 00                	add    BYTE PTR [rax],al
  4003f3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...

Disassembly of section .init:

0000000000400400 <_init>:
  400400:	48 83 ec 08          	sub    rsp,0x8
  400404:	48 8b 05 ed 0b 20 00 	mov    rax,QWORD PTR [rip+0x200bed]        # 600ff8 <_DYNAMIC+0x1d0>
  40040b:	48 85 c0             	test   rax,rax
  40040e:	74 05                	je     400415 <_init+0x15>
  400410:	e8 4b 00 00 00       	call   400460 <atoi@plt+0x10>
  400415:	48 83 c4 08          	add    rsp,0x8
  400419:	c3                   	ret    

Disassembly of section .plt:

0000000000400420 <printf@plt-0x10>:
  400420:	ff 35 e2 0b 20 00    	push   QWORD PTR [rip+0x200be2]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400426:	ff 25 e4 0b 20 00    	jmp    QWORD PTR [rip+0x200be4]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40042c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400430 <printf@plt>:
  400430:	ff 25 e2 0b 20 00    	jmp    QWORD PTR [rip+0x200be2]        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400436:	68 00 00 00 00       	push   0x0
  40043b:	e9 e0 ff ff ff       	jmp    400420 <_init+0x20>

0000000000400440 <__libc_start_main@plt>:
  400440:	ff 25 da 0b 20 00    	jmp    QWORD PTR [rip+0x200bda]        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400446:	68 01 00 00 00       	push   0x1
  40044b:	e9 d0 ff ff ff       	jmp    400420 <_init+0x20>

0000000000400450 <atoi@plt>:
  400450:	ff 25 d2 0b 20 00    	jmp    QWORD PTR [rip+0x200bd2]        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400456:	68 02 00 00 00       	push   0x2
  40045b:	e9 c0 ff ff ff       	jmp    400420 <_init+0x20>

Disassembly of section .plt.got:

0000000000400460 <.plt.got>:
  400460:	ff 25 92 0b 20 00    	jmp    QWORD PTR [rip+0x200b92]        # 600ff8 <_DYNAMIC+0x1d0>
  400466:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000400470 <_start>:
  400470:	31 ed                	xor    ebp,ebp
  400472:	49 89 d1             	mov    r9,rdx
  400475:	5e                   	pop    rsi
  400476:	48 89 e2             	mov    rdx,rsp
  400479:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  40047d:	50                   	push   rax
  40047e:	54                   	push   rsp
  40047f:	49 c7 c0 90 06 40 00 	mov    r8,0x400690
  400486:	48 c7 c1 20 06 40 00 	mov    rcx,0x400620
  40048d:	48 c7 c7 d9 05 40 00 	mov    rdi,0x4005d9
  400494:	e8 a7 ff ff ff       	call   400440 <__libc_start_main@plt>
  400499:	f4                   	hlt    
  40049a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000004004a0 <deregister_tm_clones>:
  4004a0:	b8 47 10 60 00       	mov    eax,0x601047
  4004a5:	55                   	push   rbp
  4004a6:	48 2d 40 10 60 00    	sub    rax,0x601040
  4004ac:	48 83 f8 0e          	cmp    rax,0xe
  4004b0:	48 89 e5             	mov    rbp,rsp
  4004b3:	76 1b                	jbe    4004d0 <deregister_tm_clones+0x30>
  4004b5:	b8 00 00 00 00       	mov    eax,0x0
  4004ba:	48 85 c0             	test   rax,rax
  4004bd:	74 11                	je     4004d0 <deregister_tm_clones+0x30>
  4004bf:	5d                   	pop    rbp
  4004c0:	bf 40 10 60 00       	mov    edi,0x601040
  4004c5:	ff e0                	jmp    rax
  4004c7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  4004ce:	00 00 
  4004d0:	5d                   	pop    rbp
  4004d1:	c3                   	ret    
  4004d2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  4004d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  4004dd:	00 00 00 

00000000004004e0 <register_tm_clones>:
  4004e0:	be 40 10 60 00       	mov    esi,0x601040
  4004e5:	55                   	push   rbp
  4004e6:	48 81 ee 40 10 60 00 	sub    rsi,0x601040
  4004ed:	48 c1 fe 03          	sar    rsi,0x3
  4004f1:	48 89 e5             	mov    rbp,rsp
  4004f4:	48 89 f0             	mov    rax,rsi
  4004f7:	48 c1 e8 3f          	shr    rax,0x3f
  4004fb:	48 01 c6             	add    rsi,rax
  4004fe:	48 d1 fe             	sar    rsi,1
  400501:	74 15                	je     400518 <register_tm_clones+0x38>
  400503:	b8 00 00 00 00       	mov    eax,0x0
  400508:	48 85 c0             	test   rax,rax
  40050b:	74 0b                	je     400518 <register_tm_clones+0x38>
  40050d:	5d                   	pop    rbp
  40050e:	bf 40 10 60 00       	mov    edi,0x601040
  400513:	ff e0                	jmp    rax
  400515:	0f 1f 00             	nop    DWORD PTR [rax]
  400518:	5d                   	pop    rbp
  400519:	c3                   	ret    
  40051a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400520 <__do_global_dtors_aux>:
  400520:	80 3d 19 0b 20 00 00 	cmp    BYTE PTR [rip+0x200b19],0x0        # 601040 <__TMC_END__>
  400527:	75 11                	jne    40053a <__do_global_dtors_aux+0x1a>
  400529:	55                   	push   rbp
  40052a:	48 89 e5             	mov    rbp,rsp
  40052d:	e8 6e ff ff ff       	call   4004a0 <deregister_tm_clones>
  400532:	5d                   	pop    rbp
  400533:	c6 05 06 0b 20 00 01 	mov    BYTE PTR [rip+0x200b06],0x1        # 601040 <__TMC_END__>
  40053a:	f3 c3                	repz ret 
  40053c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400540 <frame_dummy>:
  400540:	bf 20 0e 60 00       	mov    edi,0x600e20
  400545:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
  400549:	75 05                	jne    400550 <frame_dummy+0x10>
  40054b:	eb 93                	jmp    4004e0 <register_tm_clones>
  40054d:	0f 1f 00             	nop    DWORD PTR [rax]
  400550:	b8 00 00 00 00       	mov    eax,0x0
  400555:	48 85 c0             	test   rax,rax
  400558:	74 f1                	je     40054b <frame_dummy+0xb>
  40055a:	55                   	push   rbp
  40055b:	48 89 e5             	mov    rbp,rsp
  40055e:	ff d0                	call   rax
  400560:	5d                   	pop    rbp
  400561:	e9 7a ff ff ff       	jmp    4004e0 <register_tm_clones>

0000000000400566 <my_atoi>:
  400566:	55                   	push   rbp
  400567:	48 89 e5             	mov    rbp,rsp
  40056a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  40056e:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
  400575:	c7 45 fc 01 00 00 00 	mov    DWORD PTR [rbp-0x4],0x1
  40057c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400580:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400583:	3c 2d                	cmp    al,0x2d
  400585:	75 33                	jne    4005ba <my_atoi+0x54>
  400587:	c7 45 fc ff ff ff ff 	mov    DWORD PTR [rbp-0x4],0xffffffff
  40058e:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
  400593:	eb 25                	jmp    4005ba <my_atoi+0x54>
  400595:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
  400598:	89 d0                	mov    eax,edx
  40059a:	c1 e0 02             	shl    eax,0x2
  40059d:	01 d0                	add    eax,edx
  40059f:	01 c0                	add    eax,eax
  4005a1:	89 c2                	mov    edx,eax
  4005a3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4005a7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  4005aa:	0f be c0             	movsx  eax,al
  4005ad:	01 d0                	add    eax,edx
  4005af:	83 e8 30             	sub    eax,0x30
  4005b2:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
  4005b5:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
  4005ba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4005be:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  4005c1:	3c 2f                	cmp    al,0x2f
  4005c3:	7e 0b                	jle    4005d0 <my_atoi+0x6a>
  4005c5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4005c9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  4005cc:	3c 39                	cmp    al,0x39
  4005ce:	7e c5                	jle    400595 <my_atoi+0x2f>
  4005d0:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  4005d3:	0f af 45 fc          	imul   eax,DWORD PTR [rbp-0x4]
  4005d7:	5d                   	pop    rbp
  4005d8:	c3                   	ret    

00000000004005d9 <main>:
  4005d9:	55                   	push   rbp
  4005da:	48 89 e5             	mov    rbp,rsp
  4005dd:	48 83 ec 10          	sub    rsp,0x10
  4005e1:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
  4005e4:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4005e8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  4005ec:	48 83 c0 08          	add    rax,0x8
  4005f0:	48 8b 00             	mov    rax,QWORD PTR [rax]
  4005f3:	48 89 c7             	mov    rdi,rax
  4005f6:	b8 00 00 00 00       	mov    eax,0x0
  4005fb:	e8 50 fe ff ff       	call   400450 <atoi@plt>
  400600:	89 c6                	mov    esi,eax
  400602:	bf a4 06 40 00       	mov    edi,0x4006a4
  400607:	b8 00 00 00 00       	mov    eax,0x0
  40060c:	e8 1f fe ff ff       	call   400430 <printf@plt>
  400611:	b8 00 00 00 00       	mov    eax,0x0
  400616:	c9                   	leave  
  400617:	c3                   	ret    
  400618:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40061f:	00 

0000000000400620 <__libc_csu_init>:
  400620:	41 57                	push   r15
  400622:	41 56                	push   r14
  400624:	41 89 ff             	mov    r15d,edi
  400627:	41 55                	push   r13
  400629:	41 54                	push   r12
  40062b:	4c 8d 25 de 07 20 00 	lea    r12,[rip+0x2007de]        # 600e10 <__frame_dummy_init_array_entry>
  400632:	55                   	push   rbp
  400633:	48 8d 2d de 07 20 00 	lea    rbp,[rip+0x2007de]        # 600e18 <__init_array_end>
  40063a:	53                   	push   rbx
  40063b:	49 89 f6             	mov    r14,rsi
  40063e:	49 89 d5             	mov    r13,rdx
  400641:	4c 29 e5             	sub    rbp,r12
  400644:	48 83 ec 08          	sub    rsp,0x8
  400648:	48 c1 fd 03          	sar    rbp,0x3
  40064c:	e8 af fd ff ff       	call   400400 <_init>
  400651:	48 85 ed             	test   rbp,rbp
  400654:	74 20                	je     400676 <__libc_csu_init+0x56>
  400656:	31 db                	xor    ebx,ebx
  400658:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40065f:	00 
  400660:	4c 89 ea             	mov    rdx,r13
  400663:	4c 89 f6             	mov    rsi,r14
  400666:	44 89 ff             	mov    edi,r15d
  400669:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40066d:	48 83 c3 01          	add    rbx,0x1
  400671:	48 39 eb             	cmp    rbx,rbp
  400674:	75 ea                	jne    400660 <__libc_csu_init+0x40>
  400676:	48 83 c4 08          	add    rsp,0x8
  40067a:	5b                   	pop    rbx
  40067b:	5d                   	pop    rbp
  40067c:	41 5c                	pop    r12
  40067e:	41 5d                	pop    r13
  400680:	41 5e                	pop    r14
  400682:	41 5f                	pop    r15
  400684:	c3                   	ret    
  400685:	90                   	nop
  400686:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40068d:	00 00 00 

0000000000400690 <__libc_csu_fini>:
  400690:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000400694 <_fini>:
  400694:	48 83 ec 08          	sub    rsp,0x8
  400698:	48 83 c4 08          	add    rsp,0x8
  40069c:	c3                   	ret    

Disassembly of section .rodata:

00000000004006a0 <_IO_stdin_used>:
  4006a0:	01 00                	add    DWORD PTR [rax],eax
  4006a2:	02 00                	add    al,BYTE PTR [rax]
  4006a4:	25                   	.byte 0x25
  4006a5:	64 0a 00             	or     al,BYTE PTR fs:[rax]

Disassembly of section .eh_frame_hdr:

00000000004006a8 <__GNU_EH_FRAME_HDR>:
  4006a8:	01 1b                	add    DWORD PTR [rbx],ebx
  4006aa:	03 3b                	add    edi,DWORD PTR [rbx]
  4006ac:	3c 00                	cmp    al,0x0
  4006ae:	00 00                	add    BYTE PTR [rax],al
  4006b0:	06                   	(bad)  
  4006b1:	00 00                	add    BYTE PTR [rax],al
  4006b3:	00 78 fd             	add    BYTE PTR [rax-0x3],bh
  4006b6:	ff                   	(bad)  
  4006b7:	ff 88 00 00 00 c8    	dec    DWORD PTR [rax-0x38000000]
  4006bd:	fd                   	std    
  4006be:	ff                   	(bad)  
  4006bf:	ff 58 00             	call   FWORD PTR [rax+0x0]
  4006c2:	00 00                	add    BYTE PTR [rax],al
  4006c4:	be fe ff ff b0       	mov    esi,0xb0fffffe
  4006c9:	00 00                	add    BYTE PTR [rax],al
  4006cb:	00 31                	add    BYTE PTR [rcx],dh
  4006cd:	ff                   	(bad)  
  4006ce:	ff                   	(bad)  
  4006cf:	ff d0                	call   rax
  4006d1:	00 00                	add    BYTE PTR [rax],al
  4006d3:	00 78 ff             	add    BYTE PTR [rax-0x1],bh
  4006d6:	ff                   	(bad)  
  4006d7:	ff f0                	push   rax
  4006d9:	00 00                	add    BYTE PTR [rax],al
  4006db:	00 e8                	add    al,ch
  4006dd:	ff                   	(bad)  
  4006de:	ff                   	(bad)  
  4006df:	ff                   	(bad)  
  4006e0:	38 01                	cmp    BYTE PTR [rcx],al
	...

Disassembly of section .eh_frame:

00000000004006e8 <__FRAME_END__-0x110>:
  4006e8:	14 00                	adc    al,0x0
  4006ea:	00 00                	add    BYTE PTR [rax],al
  4006ec:	00 00                	add    BYTE PTR [rax],al
  4006ee:	00 00                	add    BYTE PTR [rax],al
  4006f0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4006f3:	00 01                	add    BYTE PTR [rcx],al
  4006f5:	78 10                	js     400707 <__GNU_EH_FRAME_HDR+0x5f>
  4006f7:	01 1b                	add    DWORD PTR [rbx],ebx
  4006f9:	0c 07                	or     al,0x7
  4006fb:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  400701:	00 00                	add    BYTE PTR [rax],al
  400703:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400706:	00 00                	add    BYTE PTR [rax],al
  400708:	68 fd ff ff 2a       	push   0x2afffffd
	...
  400715:	00 00                	add    BYTE PTR [rax],al
  400717:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  40071a:	00 00                	add    BYTE PTR [rax],al
  40071c:	00 00                	add    BYTE PTR [rax],al
  40071e:	00 00                	add    BYTE PTR [rax],al
  400720:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400723:	00 01                	add    BYTE PTR [rcx],al
  400725:	78 10                	js     400737 <__GNU_EH_FRAME_HDR+0x8f>
  400727:	01 1b                	add    DWORD PTR [rbx],ebx
  400729:	0c 07                	or     al,0x7
  40072b:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  400731:	00 00                	add    BYTE PTR [rax],al
  400733:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400736:	00 00                	add    BYTE PTR [rax],al
  400738:	e8 fc ff ff 40       	call   41400739 <_end+0x40dff6f1>
  40073d:	00 00                	add    BYTE PTR [rax],al
  40073f:	00 00                	add    BYTE PTR [rax],al
  400741:	0e                   	(bad)  
  400742:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  400745:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  400748:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  40074b:	80 00 3f             	add    BYTE PTR [rax],0x3f
  40074e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  400750:	2a 33                	sub    dh,BYTE PTR [rbx]
  400752:	24 22                	and    al,0x22
  400754:	00 00                	add    BYTE PTR [rax],al
  400756:	00 00                	add    BYTE PTR [rax],al
  400758:	1c 00                	sbb    al,0x0
  40075a:	00 00                	add    BYTE PTR [rax],al
  40075c:	44 00 00             	add    BYTE PTR [rax],r8b
  40075f:	00 06                	add    BYTE PTR [rsi],al
  400761:	fe                   	(bad)  
  400762:	ff                   	(bad)  
  400763:	ff 73 00             	push   QWORD PTR [rbx+0x0]
  400766:	00 00                	add    BYTE PTR [rax],al
  400768:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40076b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400771:	02 6e 0c             	add    ch,BYTE PTR [rsi+0xc]
  400774:	07                   	(bad)  
  400775:	08 00                	or     BYTE PTR [rax],al
  400777:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40077a:	00 00                	add    BYTE PTR [rax],al
  40077c:	64 00 00             	add    BYTE PTR fs:[rax],al
  40077f:	00 59 fe             	add    BYTE PTR [rcx-0x2],bl
  400782:	ff                   	(bad)  
  400783:	ff                   	(bad)  
  400784:	3f                   	(bad)  
  400785:	00 00                	add    BYTE PTR [rax],al
  400787:	00 00                	add    BYTE PTR [rax],al
  400789:	41 0e                	rex.B (bad) 
  40078b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400791:	7a 0c                	jp     40079f <__GNU_EH_FRAME_HDR+0xf7>
  400793:	07                   	(bad)  
  400794:	08 00                	or     BYTE PTR [rax],al
  400796:	00 00                	add    BYTE PTR [rax],al
  400798:	44 00 00             	add    BYTE PTR [rax],r8b
  40079b:	00 84 00 00 00 80 fe 	add    BYTE PTR [rax+rax*1-0x1800000],al
  4007a2:	ff                   	(bad)  
  4007a3:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  4007a6:	00 00                	add    BYTE PTR [rax],al
  4007a8:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  4007ab:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
  4007b1:	8e 03                	mov    es,WORD PTR [rbx]
  4007b3:	45 0e                	rex.RB (bad) 
  4007b5:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
  4007bb:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86701609 <_end+0xffffffff861005c1>
  4007c1:	06                   	(bad)  
  4007c2:	48 0e                	rex.W (bad) 
  4007c4:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  4007ca:	72 0e                	jb     4007da <__GNU_EH_FRAME_HDR+0x132>
  4007cc:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  4007cf:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  4007d2:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  4007d5:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  4007d8:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  4007db:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  4007de:	08 00                	or     BYTE PTR [rax],al
  4007e0:	14 00                	adc    al,0x0
  4007e2:	00 00                	add    BYTE PTR [rax],al
  4007e4:	cc                   	int3   
  4007e5:	00 00                	add    BYTE PTR [rax],al
  4007e7:	00 a8 fe ff ff 02    	add    BYTE PTR [rax+0x2fffffe],ch
	...

00000000004007f8 <__FRAME_END__>:
  4007f8:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	40 05 40 00 00 00    	rex add eax,0x40
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	20 05 40 00 00 00    	and    BYTE PTR [rip+0x40],al        # 600e5e <_DYNAMIC+0x36>
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    DWORD PTR [rax],eax
  600e2a:	00 00                	add    BYTE PTR [rax],al
  600e2c:	00 00                	add    BYTE PTR [rax],al
  600e2e:	00 00                	add    BYTE PTR [rax],al
  600e30:	01 00                	add    DWORD PTR [rax],eax
  600e32:	00 00                	add    BYTE PTR [rax],al
  600e34:	00 00                	add    BYTE PTR [rax],al
  600e36:	00 00                	add    BYTE PTR [rax],al
  600e38:	0c 00                	or     al,0x0
  600e3a:	00 00                	add    BYTE PTR [rax],al
  600e3c:	00 00                	add    BYTE PTR [rax],al
  600e3e:	00 00                	add    BYTE PTR [rax],al
  600e40:	00 04 40             	add    BYTE PTR [rax+rax*2],al
  600e43:	00 00                	add    BYTE PTR [rax],al
  600e45:	00 00                	add    BYTE PTR [rax],al
  600e47:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    BYTE PTR [rax],al
  600e4f:	00 94 06 40 00 00 00 	add    BYTE PTR [rsi+rax*1+0x40],dl
  600e56:	00 00                	add    BYTE PTR [rax],al
  600e58:	19 00                	sbb    DWORD PTR [rax],eax
  600e5a:	00 00                	add    BYTE PTR [rax],al
  600e5c:	00 00                	add    BYTE PTR [rax],al
  600e5e:	00 00                	add    BYTE PTR [rax],al
  600e60:	10 0e                	adc    BYTE PTR [rsi],cl
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    BYTE PTR [rax],al
  600e65:	00 00                	add    BYTE PTR [rax],al
  600e67:	00 1b                	add    BYTE PTR [rbx],bl
  600e69:	00 00                	add    BYTE PTR [rax],al
  600e6b:	00 00                	add    BYTE PTR [rax],al
  600e6d:	00 00                	add    BYTE PTR [rax],al
  600e6f:	00 08                	add    BYTE PTR [rax],cl
  600e71:	00 00                	add    BYTE PTR [rax],al
  600e73:	00 00                	add    BYTE PTR [rax],al
  600e75:	00 00                	add    BYTE PTR [rax],al
  600e77:	00 1a                	add    BYTE PTR [rdx],bl
  600e79:	00 00                	add    BYTE PTR [rax],al
  600e7b:	00 00                	add    BYTE PTR [rax],al
  600e7d:	00 00                	add    BYTE PTR [rax],al
  600e7f:	00 18                	add    BYTE PTR [rax],bl
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    BYTE PTR [rax],al
  600e85:	00 00                	add    BYTE PTR [rax],al
  600e87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  600e8a:	00 00                	add    BYTE PTR [rax],al
  600e8c:	00 00                	add    BYTE PTR [rax],al
  600e8e:	00 00                	add    BYTE PTR [rax],al
  600e90:	08 00                	or     BYTE PTR [rax],al
  600e92:	00 00                	add    BYTE PTR [rax],al
  600e94:	00 00                	add    BYTE PTR [rax],al
  600e96:	00 00                	add    BYTE PTR [rax],al
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600e9d:	00 00                	add    BYTE PTR [rax],al
  600e9f:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  600ea5:	00 00                	add    BYTE PTR [rax],al
  600ea7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    BYTE PTR [rax],al
  600eaf:	00 30                	add    BYTE PTR [rax],dh
  600eb1:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  600eb4:	00 00                	add    BYTE PTR [rax],al
  600eb6:	00 00                	add    BYTE PTR [rax],al
  600eb8:	06                   	(bad)  
  600eb9:	00 00                	add    BYTE PTR [rax],al
  600ebb:	00 00                	add    BYTE PTR [rax],al
  600ebd:	00 00                	add    BYTE PTR [rax],al
  600ebf:	00 b8 02 40 00 00    	add    BYTE PTR [rax+0x4002],bh
  600ec5:	00 00                	add    BYTE PTR [rax],al
  600ec7:	00 0a                	add    BYTE PTR [rdx],cl
  600ec9:	00 00                	add    BYTE PTR [rax],al
  600ecb:	00 00                	add    BYTE PTR [rax],al
  600ecd:	00 00                	add    BYTE PTR [rax],al
  600ecf:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
  600ed3:	00 00                	add    BYTE PTR [rax],al
  600ed5:	00 00                	add    BYTE PTR [rax],al
  600ed7:	00 0b                	add    BYTE PTR [rbx],cl
  600ed9:	00 00                	add    BYTE PTR [rax],al
  600edb:	00 00                	add    BYTE PTR [rax],al
  600edd:	00 00                	add    BYTE PTR [rax],al
  600edf:	00 18                	add    BYTE PTR [rax],bl
  600ee1:	00 00                	add    BYTE PTR [rax],al
  600ee3:	00 00                	add    BYTE PTR [rax],al
  600ee5:	00 00                	add    BYTE PTR [rax],al
  600ee7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 600eed <_DYNAMIC+0xc5>
	...
  600ef5:	00 00                	add    BYTE PTR [rax],al
  600ef7:	00 03                	add    BYTE PTR [rbx],al
	...
  600f01:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  600f04:	00 00                	add    BYTE PTR [rax],al
  600f06:	00 00                	add    BYTE PTR [rax],al
  600f08:	02 00                	add    al,BYTE PTR [rax]
  600f0a:	00 00                	add    BYTE PTR [rax],al
  600f0c:	00 00                	add    BYTE PTR [rax],al
  600f0e:	00 00                	add    BYTE PTR [rax],al
  600f10:	48 00 00             	rex.W add BYTE PTR [rax],al
  600f13:	00 00                	add    BYTE PTR [rax],al
  600f15:	00 00                	add    BYTE PTR [rax],al
  600f17:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  600f1a:	00 00                	add    BYTE PTR [rax],al
  600f1c:	00 00                	add    BYTE PTR [rax],al
  600f1e:	00 00                	add    BYTE PTR [rax],al
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    BYTE PTR [rax],al
  600f23:	00 00                	add    BYTE PTR [rax],al
  600f25:	00 00                	add    BYTE PTR [rax],al
  600f27:	00 17                	add    BYTE PTR [rdi],dl
  600f29:	00 00                	add    BYTE PTR [rax],al
  600f2b:	00 00                	add    BYTE PTR [rax],al
  600f2d:	00 00                	add    BYTE PTR [rax],al
  600f2f:	00 b8 03 40 00 00    	add    BYTE PTR [rax+0x4003],bh
  600f35:	00 00                	add    BYTE PTR [rax],al
  600f37:	00 07                	add    BYTE PTR [rdi],al
  600f39:	00 00                	add    BYTE PTR [rax],al
  600f3b:	00 00                	add    BYTE PTR [rax],al
  600f3d:	00 00                	add    BYTE PTR [rax],al
  600f3f:	00 a0 03 40 00 00    	add    BYTE PTR [rax+0x4003],ah
  600f45:	00 00                	add    BYTE PTR [rax],al
  600f47:	00 08                	add    BYTE PTR [rax],cl
  600f49:	00 00                	add    BYTE PTR [rax],al
  600f4b:	00 00                	add    BYTE PTR [rax],al
  600f4d:	00 00                	add    BYTE PTR [rax],al
  600f4f:	00 18                	add    BYTE PTR [rax],bl
  600f51:	00 00                	add    BYTE PTR [rax],al
  600f53:	00 00                	add    BYTE PTR [rax],al
  600f55:	00 00                	add    BYTE PTR [rax],al
  600f57:	00 09                	add    BYTE PTR [rcx],cl
  600f59:	00 00                	add    BYTE PTR [rax],al
  600f5b:	00 00                	add    BYTE PTR [rax],al
  600f5d:	00 00                	add    BYTE PTR [rax],al
  600f5f:	00 18                	add    BYTE PTR [rax],bl
  600f61:	00 00                	add    BYTE PTR [rax],al
  600f63:	00 00                	add    BYTE PTR [rax],al
  600f65:	00 00                	add    BYTE PTR [rax],al
  600f67:	00 fe                	add    dh,bh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f6d:	00 00                	add    BYTE PTR [rax],al
  600f6f:	00 80 03 40 00 00    	add    BYTE PTR [rax+0x4003],al
  600f75:	00 00                	add    BYTE PTR [rax],al
  600f77:	00 ff                	add    bh,bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f7d:	00 00                	add    BYTE PTR [rax],al
  600f7f:	00 01                	add    BYTE PTR [rcx],al
  600f81:	00 00                	add    BYTE PTR [rax],al
  600f83:	00 00                	add    BYTE PTR [rax],al
  600f85:	00 00                	add    BYTE PTR [rax],al
  600f87:	00 f0                	add    al,dh
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f8d:	00 00                	add    BYTE PTR [rax],al
  600f8f:	00 74 03 40          	add    BYTE PTR [rbx+rax*1+0x40],dh
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    BYTE PTR [rsi],cl
  601002:	60                   	(bad)  
	...
  601017:	00 36                	add    BYTE PTR [rsi],dh
  601019:	04 40                	add    al,0x40
  60101b:	00 00                	add    BYTE PTR [rax],al
  60101d:	00 00                	add    BYTE PTR [rax],al
  60101f:	00 46 04             	add    BYTE PTR [rsi+0x4],al
  601022:	40 00 00             	add    BYTE PTR [rax],al
  601025:	00 00                	add    BYTE PTR [rax],al
  601027:	00 56 04             	add    BYTE PTR [rsi+0x4],dl
  60102a:	40 00 00             	add    BYTE PTR [rax],al
  60102d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000601030 <__data_start>:
	...

0000000000601038 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601040 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x400388>
   a:	74 75                	je     81 <_init-0x40037f>
   c:	20 35 2e 34 2e 30    	and    BYTE PTR [rip+0x302e342e],dh        # 302e3440 <_end+0x2fce23f8>
  12:	2d 36 75 62 75       	sub    eax,0x75627536
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <_init-0x400371>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	36 2e 30 34 2e       	ss xor BYTE PTR cs:[rsi+rbp*1],dh
  22:	35 29 20 35 2e       	xor    eax,0x2e352029
  27:	34 2e                	xor    al,0x2e
  29:	30 20                	xor    BYTE PTR [rax],ah
  2b:	32 30                	xor    dh,BYTE PTR [rax]
  2d:	31 36                	xor    DWORD PTR [rsi],esi
  2f:	30 36                	xor    BYTE PTR [rsi],dh
  31:	30 39                	xor    BYTE PTR [rcx],bh
	...
